package brownshome.netcode.generated;

import java.util.List;
import java.util.Arrays;

import javax.annotation.processing.Generated;

import brownshome.netcode.annotation.NetworkDirection.Sender;
import brownshome.netcode.annotation.PacketDeclaration;

import brownshome.netcode.NetworkSchema;
import brownshome.netcode.PacketDefinition;

@Generated("brownshome.netcode.annotationprocessor.NetworkSchemaGenerator")
public class ${schemaName}NetworkSchema implements NetworkSchema {
	private final List<PacketDefinition<?>> packetTypes = Arrays.asList(new PacketDefinition[] {
#foreach( $type in $types )
		new PacketDefinition<>(new PacketDeclaration("", ${type.Priority}, ${type.canFragment}, 
				${type.Reliable}, Sender.${type.Sender}, "${type.handledBy}", "${type.ClassName}"), ${type.ClassName}::new),
#end
	});
	
	@Override
	public List<PacketDefinition<?>> getPacketTypes() {
		return packetTypes;
	}
}